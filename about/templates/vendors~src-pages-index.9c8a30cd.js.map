{"version":3,"sources":["webpack:////Users/snehi/Projects/Highlander/node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:////Users/snehi/Projects/Highlander/node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:////Users/snehi/Projects/Highlander/node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:////Users/snehi/Projects/Highlander/node_modules/semantic-ui-react/dist/es/elements/Button/Button.js"],"names":["ButtonContent","props","children","className","content","hidden","visible","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","Button_ButtonContent","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","isNil_default","map_default","button","elements_Button_Button","create","Button_ButtonGroup","ButtonOr","text","data-text","Button_ButtonOr","Button_Button","_Component","Button","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","react","_this$props","label","_this$props2","disabled","tabIndex","invoke_default","ref","current","e","preventDefault","_this$props3","labelPosition","inherits_default","createClass_default","key","value","role","_this$props4","active","animated","circular","loading","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","Ref","innerRef","aria-pressed","undefined","Icon","hasChildren","computeButtonAriaRole","as","factories","__webpack_exports__"],"mappings":"wXASA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,OACAC,EAAAL,EAAAK,QACAC,EAAgBC,IAAGC,OAAAC,EAAA,EAAAD,CAAUH,EAAA,WAAsBG,OAAAC,EAAA,EAAAD,CAAUJ,EAAA,oBAAAF,GAC7DQ,EAAaF,OAAAG,EAAA,EAAAH,CAAiBT,EAAAC,GAC9BY,EAAoBJ,OAAAK,EAAA,EAAAL,CAAcT,EAAAC,GAClC,OAASc,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDR,UAAAI,IACMY,EAAA,EAAaC,MAAAlB,GAAAE,EAAAF,GAGnBF,EAAAqB,aAAA,2DACArB,EAAAsB,UAkBC,GACc,IAAAC,EAAA,mBC/Bf,SAAAC,EAAAvB,GACA,IAAAwB,EAAAxB,EAAAwB,SACAC,EAAAzB,EAAAyB,MACAC,EAAA1B,EAAA0B,QACAzB,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAyB,EAAA3B,EAAA2B,MACAC,EAAA5B,EAAA4B,QACAzB,EAAAH,EAAAG,QACA0B,EAAA7B,EAAA6B,QACAC,EAAA9B,EAAA8B,MACAC,EAAA/B,EAAA+B,KACAC,EAAAhC,EAAAgC,SACAC,EAAAjC,EAAAiC,QACAC,EAAAlC,EAAAkC,SACAC,EAAAnC,EAAAmC,SACAC,EAAApC,EAAAoC,QACAC,EAAArC,EAAAqC,UACAC,EAAAtC,EAAAsC,KACAC,EAAAvC,EAAAuC,OACAC,EAAAxC,EAAAwC,SACAC,EAAAzC,EAAAyC,OACAnC,EAAgBC,IAAE,KAAAoB,EAAAW,EAAoB9B,OAAAC,EAAA,EAAAD,CAAUiB,EAAA,SAAkBjB,OAAAC,EAAA,EAAAD,CAAUoB,EAAA,WAAsBpB,OAAAC,EAAA,EAAAD,CAAUsB,EAAA,SAAkBtB,OAAAC,EAAA,EAAAD,CAAUuB,EAAA,QAAgBvB,OAAAC,EAAA,EAAAD,CAAUwB,EAAA,YAAwBxB,OAAAC,EAAA,EAAAD,CAAUyB,EAAA,WAAsBzB,OAAAC,EAAA,EAAAD,CAAU0B,EAAA,YAAwB1B,OAAAC,EAAA,EAAAD,CAAU2B,EAAA,YAAwB3B,OAAAC,EAAA,EAAAD,CAAU4B,EAAA,WAAsB5B,OAAAC,EAAA,EAAAD,CAAU6B,EAAA,aAA0B7B,OAAAC,EAAA,EAAAD,CAAU+B,EAAA,UAAoB/B,OAAAC,EAAA,EAAAD,CAAUgC,EAAA,YAAwBhC,OAAAC,EAAA,EAAAD,CAAmBgB,EAAA,YAAwBhB,OAAAC,EAAA,EAAAD,CAAcqB,EAAA,WAAsBrB,OAAAC,EAAA,EAAAD,CAAYiC,GAAA,UAAAvC,GAC7fQ,EAAaF,OAAAG,EAAA,EAAAH,CAAiBe,EAAAvB,GAC9BY,EAAoBJ,OAAAK,EAAA,EAAAL,CAAce,EAAAvB,GAElC,OAAM0C,IAAMhB,GACDZ,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACvDR,UAAAI,IACQY,EAAA,EAAaC,MAAAlB,GAAAE,EAAAF,GAGZa,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDR,UAAAI,IACMqC,IAAIjB,EAAA,SAAAkB,GACV,OAAWC,EAAMC,OAAAF,MAIjBrB,EAAAH,aAAA,qNACAG,EAAAF,UAkEC,GACc,IAAA0B,EAAA,EC9Gf,SAAAC,EAAAhD,GACA,IAAAE,EAAAF,EAAAE,UACA+C,EAAAjD,EAAAiD,KACA3C,EAAgBC,IAAE,KAAAL,GAClBQ,EAAaF,OAAAG,EAAA,EAAAH,CAAiBwC,EAAAhD,GAC9BY,EAAoBJ,OAAAK,EAAA,EAAAL,CAAcwC,EAAAhD,GAClC,OAASc,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDR,UAAAI,EACA4C,YAAAD,KAIAD,EAAA5B,aAAA,0BACA4B,EAAA3B,UASC,GACc,IAAA8B,EAAA,ECJXC,EAEJ,SAAAC,GAGA,SAAAC,IACA,IAAAC,EAEAC,EAEIC,IAAeC,KAAAJ,GAEnB,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAgDA,OA7CAR,EAAYS,IAA0BP,MAAAH,EAA2BW,IAAeZ,IAAAa,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBf,IAAA,MAAiBhD,OAAAgE,EAAA,UAAAhE,IAE9E8D,IAAgBC,IAAuBA,IAAsBf,IAAA,gCACjE,IAAAiB,EAAAjB,EAAAxD,MACAwB,EAAAiD,EAAAjD,SACAkD,EAAAD,EAAAC,MACA,IAAWhC,IAAMlB,KAAekB,IAAMgC,GAAA,cAGlCJ,IAAgBC,IAAuBA,IAAsBf,IAAA,2BAAA5C,GACjE,IAAA+D,EAAAnB,EAAAxD,MACA4E,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,SACA,OAAWnC,IAAMmC,GACjBD,GAAA,EACA,QAAAhE,EAAA,SAFiBiE,IAKbP,IAAgBC,IAAuBA,IAAsBf,IAAA,mBACjE,OAAasB,IAAOtB,EAAAuB,IAAAC,QAAA,WAGhBV,IAAgBC,IAAuBA,IAAsBf,IAAA,uBAAAyB,GACjEzB,EAAAxD,MAAA4E,SAGAK,EAAAC,iBAIMJ,IAAOtB,EAAAxD,MAAA,UAAAiF,EAAAzB,EAAAxD,SAGTsE,IAAgBC,IAAuBA,IAAsBf,IAAA,0BACjE,IAAA2B,EAAA3B,EAAAxD,MACAoF,EAAAD,EAAAC,cACAnF,EAAAkF,EAAAlF,SACAE,EAAAgF,EAAAhF,QACA4B,EAAAoD,EAAApD,KACA,WAAAA,GACAA,IAAAqD,GAAuClE,EAAA,EAAaC,MAAAlB,IAAoByC,IAAMvC,MAG9EqD,EAwFA,OAlJE6B,IAAS/B,EAAAD,GA6DTiC,IAAYhC,EAAA,EACdiC,IAAA,wBACAC,MAAA,SAAA5E,GACA,IAAA6E,EAAA/B,KAAA1D,MAAAyF,KACA,OAAW/C,IAAM+C,GACjB,WAAA7E,EAAA,gBADiB6E,IAGd,CACHF,IAAA,SACAC,MAAA,WACA,IAAAE,EAAAhC,KAAA1D,MACA2F,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,SACApE,EAAAkE,EAAAlE,SACAC,EAAAiE,EAAAjE,MACAxB,EAAAyF,EAAAzF,SACA4F,EAAAH,EAAAG,SACA3F,EAAAwF,EAAAxF,UACAyB,EAAA+D,EAAA/D,MACAC,EAAA8D,EAAA9D,QACAzB,EAAAuF,EAAAvF,QACAyE,EAAAc,EAAAd,SACA/C,EAAA6D,EAAA7D,QACAC,EAAA4D,EAAA5D,MACAC,EAAA2D,EAAA3D,KACAC,EAAA0D,EAAA1D,SACA0C,EAAAgB,EAAAhB,MACAU,EAAAM,EAAAN,cACAU,EAAAJ,EAAAI,QACA5D,EAAAwD,EAAAxD,SACAC,EAAAuD,EAAAvD,SACAC,EAAAsD,EAAAtD,QACAC,EAAAqD,EAAArD,UACAC,EAAAoD,EAAApD,KACAC,EAAAmD,EAAAnD,OACAwD,EAAwBxF,IAAEoB,EAAAW,EAAc9B,OAAAC,EAAA,EAAAD,CAAUmF,EAAA,UAAoBnF,OAAAC,EAAA,EAAAD,CAAUiB,EAAA,SAAkBjB,OAAAC,EAAA,EAAAD,CAAUqF,EAAA,YAAwBrF,OAAAC,EAAA,EAAAD,CAAUoB,EAAA,WAAsBpB,OAAAC,EAAA,EAAAD,CAAUsB,EAAA,SAAkBtB,OAAAC,EAAA,EAAAD,CAAUkD,KAAAsC,eAAA,QAA+BxF,OAAAC,EAAA,EAAAD,CAAUwB,EAAA,YAAwBxB,OAAAC,EAAA,EAAAD,CAAUsF,EAAA,WAAsBtF,OAAAC,EAAA,EAAAD,CAAU0B,EAAA,YAAwB1B,OAAAC,EAAA,EAAAD,CAAU2B,EAAA,YAAwB3B,OAAAC,EAAA,EAAAD,CAAU4B,EAAA,WAAsB5B,OAAAC,EAAA,EAAAD,CAAU6B,EAAA,aAA0B7B,OAAAC,EAAA,EAAAD,CAAU+B,EAAA,UAAoB/B,OAAAC,EAAA,EAAAD,CAAmBoF,EAAA,YAAwBpF,OAAAC,EAAA,EAAAD,CAAmBgB,EAAA,aAC/gByE,EAA2B1F,IAAGC,OAAAC,EAAA,EAAAD,CAAmB4E,KAAAV,EAAA,YACjDwB,EAA2B3F,IAAGC,OAAAC,EAAA,EAAAD,CAAUoE,EAAA,YAAwBpE,OAAAC,EAAA,EAAAD,CAAcqB,EAAA,YAC9EnB,EAAiBF,OAAAG,EAAA,EAAAH,CAAiB8C,EAAAI,KAAA1D,OAClCY,EAAwBJ,OAAAK,EAAA,EAAAL,CAAc8C,EAAAI,KAAA1D,MAAA0D,KAAAyC,oBACtCtB,EAAAnB,KAAA0C,gBAAAxF,GAEA,IAAW8B,IAAMgC,GAAA,CACjB,IAAA2B,EAA4B9F,IAAE,KAAAwF,EAAA,SAAA7F,GAC9BoG,EAA+B/F,IAAE,KAAA0F,EAAA,SAAA/F,EAAAgG,GACjCK,EAA2BC,EAAA,EAAK1D,OAAA4B,EAAA,CAChC+B,aAAA,CACAhF,OAAA,EACAiF,SAAA,SAAAtB,EAAA,gBAEAuB,iBAAA,IAEA,OAAe7F,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CAC3DR,UAAAoG,EACAM,QAAAlD,KAAAmD,cACS,SAAAzB,GAAAmB,EAA6CzF,EAAAC,EAAKC,cAAe8F,EAAA,EAAG,CAC7EC,SAAArD,KAAAqB,KACWjE,EAAAC,EAAKC,cAAA,UAChBd,UAAAmG,EACAW,eAAAzE,IAAAoD,OAAAsB,EACArC,WACAC,YACWqC,EAAA,EAAIpE,OAAAf,EAAA,CACf4E,iBAAA,IACS,IAAAxG,KAAA,UAAAiF,QAAAmB,GAGT,IAAAjG,EAAoBC,IAAE,KAAAwF,EAAAG,EAAAD,EAAA,SAAA/F,GACtBiH,GAAyBjG,EAAA,EAAaC,MAAAlB,GACtCwF,EAAA/B,KAAA0D,sBAAAxG,GACA,OAAaE,EAAAC,EAAKC,cAAe8F,EAAA,EAAG,CACpCC,SAAArD,KAAAqB,KACSjE,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDR,UAAAI,EACA0G,eAAAzE,IAAAoD,OAAAsB,EACArC,YAAA,WAAAhE,QAAAqG,EACAL,QAAAlD,KAAAmD,YACApB,OACAZ,aACOsC,GAAAlH,GAAAkH,GAA4CD,EAAA,EAAIpE,OAAAf,EAAA,CACvD4E,iBAAA,KACOQ,GAAAhH,QAIPmD,EAnJA,CAoJEkB,EAAA,WAEFF,IAAgBlB,EAAM,gBACtBiE,GAAA,WAGA/C,IAAgBlB,EAAM,UAAa9B,GAEnCgD,IAAgBlB,EAAM,QAAWL,GAEjCuB,IAAgBlB,EAAM,KAAQD,GAE9BmB,IAAgBlB,EAAM,qSAEtBA,EAAM/B,UA0FL,GACD+B,EAAMN,OAAUtC,OAAA8G,EAAA,EAAA9G,CAAuB4C,EAAM,SAAAoC,GAC7C,OACArF,QAAAqF,KAGe,IAAA3C,EAAA0E,EAAA","file":"templates/vendors~src-pages-index.9c8a30cd.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf(_toConsumableArray(SUI.COLORS).concat(['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;"],"sourceRoot":""}